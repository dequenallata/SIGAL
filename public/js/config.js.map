{"version":3,"sources":["config.js"],"names":[],"mappingsfile":"config.js","sourcesContent":["\"use strict\";\n\n\nvar deposito = angular.module('deposito',\n\n\t[\t'ui.bootstrap',\n\t\t'angularUtils.directives.dirPagination',\n\t\t'ngSanitize',\n\t\t'ui.select',\n    'directive.loading'\n\t]\n);\n\ndeposito.config( function($interpolateProvider){\n\n        $interpolateProvider.startSymbol('{#');\n        $interpolateProvider.endSymbol('#}');\n}).\n\nfilter('capitalize', function() {\n    return function(input, all) {\n      return (!!input) ? input.replace(/([^\\W_]+[^\\s-]*) */g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}) : '';\n    }\n}).\n\nfilter('propsFilter', function() {\n  return function(items, props) {\n    var out = [];\n\n    if (angular.isArray(items)) {\n      var keys = Object.keys(props);\n\n      items.forEach(function(item) {\n        var itemMatches = false;\n\n        for (var i = 0; i < keys.length; i++) {\n          var prop = keys[i];\n          var text = props[prop].toLowerCase();\n          if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\n            itemMatches = true;\n            break;\n          }\n        }\n\n        if (itemMatches) {\n          out.push(item);\n        }\n      });\n    } else {\n      // Let the output be the input untouched\n      out = items;\n    }\n\n    return out;\n  };\n}).\n\nfilter('codeforma', function() {\n  return function(input) {\n    if(input){\n      length = input.indexOf(\"-\") + 1;\n      return input.substring(length);\n    }\n  };\n});\n\nangular.module('directive.loading', [])\n\n    .directive('loading',   ['$http' ,function ($http)\n    {\n        return {\n            restrict: 'A',\n            link: function (scope, elm, attrs)\n            {\n                scope.isLoading = function () {\n                    return $http.pendingRequests.length > 0;\n                };\n\n                scope.$watch(scope.isLoading, function (v)\n                {\n                    if(v){\n                        elm.show();\n                    }else{\n                        elm.hide();\n                    }\n                });\n            }\n        };\n\n}]);\n\ndeposito.controller('menuController', function($scope, $http, $modal){\n\n  $scope.deposito = function(){\n    $modal.open({\n        animation: true,\n          templateUrl: '/cambiarDeposito',\n          controller: 'cambiaDepositoController',\n          resolve: {\n             obtenerUsuarios: function () {\n                return $scope.obtenerUsuarios;\n             }\n          }\n    });\n  }\n\n  $scope.password = function(){\n    $modal.open({\n        animation: true,\n          templateUrl: '/cambiarPassword',\n          controller: 'cambiaPasswordController'\n    });\n  }\n\n});\n\ndeposito.controller('cambiaDepositoController', function($scope, $http, $modalInstance){\n\n  $scope.deposito;\n  $scope.depositos = [];\n  $scope.alert = {};\n\n  $http.get('/getDeposito')\n      .success( function(response){$scope.deposito = response;});\n\n  $http.get('/depositos/getDepositos')\n      .success( function(response){$scope.depositos = response;});\n\n  $scope.modificar = function () {\n    $scope.save();\n  };\n\n  $scope.save = function(){\n\n    var data = {\n      'deposito':$scope.depositoM\n    };\n\n    $http.post('/editarDeposito', data)\n      .success(function(response){\n        if(response.status == 'success'){\n          $modalInstance.dismiss('cancel');\n          location.reload();\n          return;\n        }\n\n        $scope.alert = {type:response.status , msg: response.menssage};\n    });\n  };\n\n  $scope.cancelar = function () {\n    $modalInstance.dismiss('cancel');\n  };\n\n  $scope.closeAlert = function(){\n    $scope.alert = {};\n  };\n\n});\n\ndeposito.controller('cambiaPasswordController', function($scope, $http, $modalInstance){\n\n  $scope.alert = {};\n  $scope.data = {};\n\n  $scope.modificar = function () {\n    $scope.save();\n  };\n\n  $scope.save = function(){\n\n    $http.post('/cambiarPassword', $scope.data)\n      .success(function(response){\n        if(response.status == 'success'){\n          $modalInstance.dismiss('cancel');\n          return;\n        }\n\n        $scope.alert = {type:response.status , msg: response.menssage};\n    });\n  };\n\n  $scope.cancelar = function () {\n    $modalInstance.dismiss('cancel');\n  };\n\n  $scope.closeAlert = function(){\n    $scope.alert = {};\n  };\n\n});\n\n\n$(document).ready(function () {\nvar trigger = $('.hamburger'),\n    overlay = $('.overlay'),\n   isClosed = false;\n\n  trigger.click(function () {\n    hamburger_cross();\n  });\n\n  function hamburger_cross() {\n\n    if (isClosed == true) {\n      overlay.hide();\n      trigger.removeClass('is-open');\n      trigger.addClass('is-closed');\n      isClosed = false;\n    } else {\n      overlay.show();\n      trigger.removeClass('is-closed');\n      trigger.addClass('is-open');\n      isClosed = true;\n    }\n}\n\n$('[data-toggle=\"offcanvas\"]').click(function () {\n    $('#wrapper').toggleClass('toggled');\n  });\n});\n\n$(window).load(function() {\n  $(\"#loader\").fadeOut(\"fast\");\n});\n"]}